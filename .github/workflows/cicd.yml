name: Flask CI/CD Pipeline

on:
  push:
    branches:
      - main
      - staging
  pull_request:

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        pytest

    - name: Deploy to Staging
      if: github.ref == 'refs/heads/staging'
      run: |
        echo "$SSH_PRIVATE_KEY" > key.pem
        chmod 600 key.pem
        ssh -o StrictHostKeyChecking=no -i key.pem $EC2_USER@$EC2_HOST << 'EOF'
          pkill -f app.py || true
          rm -rf app
          git clone https://github.com/shakti468/-Jenkins-CI-CD-Pipeline.git app
          cd app
          sudo apt update
          sudo apt install -y python3-pip
          pip3 install -r requirements.txt
          nohup python3 app.py > flask.log 2>&1 &
        EOF
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy to Production
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        echo "$SSH_PRIVATE_KEY" > key.pem
        chmod 600 key.pem
        ssh -o StrictHostKeyChecking=no -i key.pem $EC2_USER@$EC2_HOST << 'EOF'
          pkill -f app.py || true
          rm -rf app
          git clone https://github.com/shakti468/-Jenkins-CI-CD-Pipeline.git app
          cd app
          sudo apt update
          sudo apt install -y python3-pip
          pip3 install -r requirements.txt
          nohup python3 app.py > flask.log 2>&1 &
        EOF
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
